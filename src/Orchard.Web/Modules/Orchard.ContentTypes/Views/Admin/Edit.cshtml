@model Orchard.ContentTypes.ViewModels.EditTypeViewModel
@using Orchard.ContentManagement.Metadata.Models

@{
    var typePart = Model.TypeDefinition.Parts.FirstOrDefault(x => String.Equals(x.Name, Model.TypeDefinition.Name, StringComparison.OrdinalIgnoreCase));
}

<h1>@RenderTitleSegments(T["Edit Content Type - {0}", Model.DisplayName])</h1>


<form asp-action="Edit">
    @Html.ValidationSummary()

    <fieldset class="form-group">
        <div class="row col-xs-6 ">
            <label asp-for="DisplayName">@T["Display Name"]</label>
            <input asp-for="DisplayName" class="form-control" />
            <span class="hint">@T["Name of the type as it will be displayed in screens."]</span>
        </div>
    </fieldset>

    <fieldset class="form-group">
        <h3>@T["Fields"]</h3>

        @if (typePart != null) {
        <ul class="list-group">
            @foreach (var field in typePart.PartDefinition.Fields)
            {
                <li class="list-group-item">
                    @field.DisplayName()
                    <div class="pull-xs-right">
                        <a asp-route-action="EditField" asp-route-id="@Model.TypeDefinition.Name" asp-route-name="@field.Name" class="btn btn-primary btn-sm" role="button">@T["Edit"]</a>
                        <a asp-route-action="RemoveFieldFrom" asp-route-id="@Model.TypeDefinition.Name" asp-route-name="@field.Name" class="btn btn-danger btn-sm" role="button" itemprop="UnsafeUrl RemoveUrl">@T["Remove"]</a>
                    </div>
                </li>
            }
        </ul>
        }
    </fieldset>
    <fieldset class="form-group">
        <a asp-route-action="AddFieldTo" asp-route-id="@Model.TypeDefinition.Name" class="btn btn-info btn-sm" role="button">@T["Add Field"]</a>
    </fieldset>
    <fieldset class="form-group">
        <h3>@T["Parts"]</h3>

        <ul class="list-group">
            @foreach (var part in Model.TypeDefinition.Parts.Where(x => x != typePart))
            {
                <li class="list-group-item">
                    @part.DisplayName()

                    @if (!String.IsNullOrEmpty(part.Description()))
                    {
                        <span class="hint">@T["— {0}", part.Description()]</span>
                    }
                    <div class="pull-xs-right">
                        <a asp-route-action="EditTypePart" asp-route-id="@Model.TypeDefinition.Name" asp-route-name="@part.Name" class="btn btn-primary btn-sm" role="button">@T["Edit"]</a>
                        <a asp-route-action="RemovePart" asp-route-id="@Model.TypeDefinition.Name" asp-route-name="@part.Name" class="btn btn-danger btn-sm" role="button" itemprop="UnsafeUrl RemoveUrl">@T["Remove"]</a>
                    </div>

                </li>
            }
        </ul>
    </fieldset>

    <fieldset class="form-group">
        <a asp-route-action="AddPartsTo" asp-route-id="@Model.TypeDefinition.Name" class="btn btn-info btn-sm" role="button">@T["Add Parts"]</a>
        <a asp-route-action="AddReusablePartTo" asp-route-id="@Model.TypeDefinition.Name" class="btn btn-info btn-sm" role="button">@T["Add Named Part"]</a>
    </fieldset>

    <fieldset class="form-group">
        <button class="btn btn-primary" type="submit" name="submit.Save" value="Save">@T["Save"]</button>
        <button class="btn btn-danger" type="submit" name="submit.Delete" value="Delete" itemprop="RemoveUrl">@T["Delete"]</button>
    </fieldset>
</form>