
@* <display type="Header" Fallback="~/TheBlogTheme/img/post-bg.jpg" Image="Model.ContentItem.Content.BlogPost.Image">
    <template slot="Header-Title">
        @Model.ContentItem.DisplayText
    </template>
    <display slot="Header-Subheading" tag="h2" shape="@(Model.Content.Named("BlogPost-Subtitle"))" class="subheading"></display>
    <display slot="Header-Meta">
        <span class="meta">
            @T["Posted by"] <a href="#">@Model.ContentItem.Owner"</a> on <shape type="DateTime" Format="@(T["MMMM dd, yyyy"])" Utc="Model.ContentItem.CreatedUtc"></shape>
        </span>
    </display>


</display> *@

<shape type="Header" prop-fallback="@("/TheBlogTheme/img/post-bg.jpg")" prop-image="@Model.ContentItem.Content.BlogPost.Image">
    <template slot="Header-Title">
        @Model.ContentItem.DisplayText
    </template>
    <template slot="Header-Subheading">
        <h2 class="subheading">@Model.ContentItem.Content.BlogPost.Subtitle.Text</h2>
    </template>    
    <template slot="Header-Meta">
        <span class="meta">
            @T["Posted by"] <a href="#">@Model.ContentItem.Owner</a> on <shape type="DateTime" prop-utc="Model.ContentItem.CreatedUtc" prop-format="@(T["MMMM dd, yyyy"].Value)"></shape>
        </span>
    </template>

</shape>

@await DisplayAsync(Model.Content.ContentsMetadata)
@await DisplayAsync(Model.Content.MarkdownBodyPart)
@await DisplayAsync(Model.Content.Named("BlogPost-Category"))
@await DisplayAsync(Model.Content.Named("BlogPost-Tags"))
