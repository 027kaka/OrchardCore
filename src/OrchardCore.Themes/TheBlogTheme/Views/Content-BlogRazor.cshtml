
@* 
<display type="Header" Fallback="~/TheBlogTheme/img/home-bg.jpg" Image="Model.ContentItem.Content.Blog.Image">
    <display slot="Header-Title">
        @Model.ContentItem.DisplayText
    </display>
    <display slot="Header-Subheading" tag="span" shape="Model.Content.HtmlBodyPart" class="subheading"></display>
    <!-- no metadata in this slot -->

</display> *@


<shape type="Header" prop-fallback="@("/TheBlogTheme/img/home-bg.jpg")" prop-image="@Model.ContentItem.Content.Blog.Image">
    <template slot="Header-Title">
        <span class="text-secondary">@Model.ContentItem.DisplayText</span> <!-- here we are able to alter the contents of the slots html -->
    </template>
    <template slot="Header-Subheading">
        <span class="subheading">
            <display shape="Model.Content.HtmlBodyPart"></display>
        </span>
    </template>
    <!-- no metadata in this slot -->

</shape>

@{
    var shape = await New.Header2();
    shape.Fallback = "/TheBlogTheme/img/home-bg.jpg";
    shape.Image = Model.ContentItem.Content.Blog.Image;
    shape.Title = "<span class='text-secondary'>" + Model.ContentItem.DisplayText + "</span>"; // with this it is harder to change the inner html.
    shape.Subheading = await New.HeaderBlogSubheading();
    shape.Subheading.Content = Model.Content.HtmlBodyPart; // doesn't display as it has already been displayed

}
@await DisplayAsync(shape)

@{
    Model.Content.Remove("HtmlBodyPart");
    Model.Content.Remove("Blog-Image");
}

<display shape="Model.Content">
    @* pop the metadata helpers in here too*@
</display>

<!-- https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots -->

