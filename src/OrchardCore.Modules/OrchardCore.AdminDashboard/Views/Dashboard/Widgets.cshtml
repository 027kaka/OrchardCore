@model AdminDashboardViewModel
@using OrchardCore.ContentManagement.Metadata.Settings;
@inject IContentManager ContentManager
@inject OrchardCore.ContentManagement.Metadata.IContentDefinitionManager ContentDefinitionManager
@inject OrchardCore.ContentManagement.Display.IContentItemDisplayManager ContentItemDisplayManager

@{
    var widgetContentTypes = ContentDefinitionManager.ListTypeDefinitions().Where(t => !string.IsNullOrEmpty(t.GetSettings<ContentTypeSettings>().Stereotype) && t.GetSettings<ContentTypeSettings>().Stereotype.Contains("DashboardWidget"));
}

<style asp-src="~/OrchardCore.AdminDashboard/Styles/admin-dashboard.min.css" debug-src="~/OrchardCore.AdminDashboard/Styles/admin-dashboard.css" at="Head" depends-on="admin, jQuery-ui"></style>
<script asp-src="~/OrchardCore.AdminDashboard/Scripts/admin-dashboard.min.js" debug-src="~/OrchardCore.AdminDashboard/Scripts/admin-dashboard.js" at="Foot" depends-on="admin, jQuery-ui"></script>

<zone Name="Title"><h1>@RenderTitleSegments(T["Dashboard Widgets"])</h1></zone>

<div class="row">
<div class="col">
    <form asp-action="Index">  
        @if (widgetContentTypes.Any())
        {
        <div class="btn-group">
            <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @T["Add Widget"]
            </button>
            <div class="dropdown-menu">
                @foreach (var type in widgetContentTypes)
                {
                    var contentItem = await ContentManager.NewAsync(type.Name);
                    var createRoute = (await ContentManager.PopulateAspectAsync<ContentItemMetadata>(contentItem)).CreateRouteValues;
                    createRoute["returnUrl"] = Context.Request.PathBase + Context.Request.Path;
                    @*createRoute["DashboardMetadata.Zone"] = zone;
                    createRoute["DashboardMetadata.Position"] = maxPosition + 1;*@
                    <a class="dropdown-item add-list-widget btn-sm"
                        data-widget-type="@type.Name"
                        href="@Url.Action((string)createRoute["Action"], (string)createRoute["controller"], createRoute)">@type.DisplayName</a>
                }
            </div>
        </div>
        }
        <div class="form-group">
            <ul class="list-group zones">
                @foreach (var contentItemSummary in Model.Widgets)
                {
                   @* contentItemSummary.Meta.Add(Html.Raw("<span class=\"badge badge-info\"><i class=\"fa fa-bookmark-o\" aria-hidden=\"true\"></i> " + contentItemSummary.ContentItem.Content.LayerMetadata.Layer + "</span>"));
                    maxPosition = Math.Max(maxPosition, (double)contentItemSummary.ContentItem.Content.LayerMetadata.Position);*@

                    <text>
                        <li class="list-group-item">
                            <div class="properties cursor-move">
                                @await DisplayAsync(contentItemSummary)
                            </div>
                            <input type="hidden"
                                    class="layer-metadata"
                                    data-content-item-id="@contentItemSummary.ContentItem.ContentItemId" />
                                    @*data-layer="@contentItemSummary.ContentItem.Content.LayerMetadata.Layer"
                                    data-position="@contentItemSummary.ContentItem.Content.LayerMetadata.Position.ToString(CultureInfo.InvariantCulture)"*@
                        </li>
                    </text>
                }                                    
            </ul>
        </div>
    </form>

</div>
<script at="Foot">
</script>
