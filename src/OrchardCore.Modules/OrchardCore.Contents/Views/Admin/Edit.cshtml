@using OrchardCore.ContentManagement
@using OrchardCore.ContentManagement.Metadata
@using OrchardCore.Mvc.Utilities

@inject IContentDefinitionManager ContentDefinitionManager

@{
    ContentItem contentItem = Model.ContentItem;
    var contentTypeDefinition = ContentDefinitionManager.GetTypeDefinition(contentItem.ContentType);
    var typeDisplayName = contentTypeDefinition?.DisplayName ?? contentItem.ContentType.CamelFriendly();
    Uri returnUrl = null;
    string refererUrl = Context.Request.Headers["Referer"].ToString();

    if (!String.IsNullOrEmpty(refererUrl)) {
        if (!refererUrl.Contains("://"))
        {
            refererUrl = Context.Request.Scheme + "://" + refererUrl;
        }
        returnUrl = new Uri(refererUrl);
    }
}

<h1>@RenderTitleSegments(T["Edit {0}", Html.Raw(typeDisplayName)])</h1>
<form asp-action="Edit" asp-route-contentitemid="@contentItem.ContentItemId" asp-route-returnUrl="@returnUrl?.PathAndQuery" method="post" enctype="multipart/form-data">
    <input type="hidden" name="returnUrl" value="@returnUrl?.PathAndQuery" />
    @Html.ValidationSummary()
    @await DisplayAsync(Model)
</form>