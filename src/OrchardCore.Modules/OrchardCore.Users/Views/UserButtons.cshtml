@model SummaryAdminUserViewModel
@using OrchardCore.Entities
@using OrchardCore.Users.Models
@using Microsoft.AspNetCore.Identity
@using OrchardCore.Users
@inject UserManager<IUser> UserManager
@{
    var user = Model.User as User;
    var isLockedOut = await UserManager.IsLockedOutAsync(user);
}
<a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary btn-sm">@T["Edit"]</a>
<a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
<a asp-action="EditPassword" asp-route-id="@user.Id" class="btn btn-secondary btn-sm">@T["Edit Password"]</a>
@if (isLockedOut)
{
    <a asp-action="Unlock" asp-route-id="@user.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl" data-title="@T["Unlock user"]" data-message="@T["Are you sure you want to unlock this user?"]">@T["Unlock"]</a>
}
@if (!user.EmailConfirmed && Site.As<RegistrationSettings>().UsersMustValidateEmail)
{
    <form method="post" class="d-inline-block">
        <input name="id" type="hidden" value="@user.Id" />
        <button asp-action="SendVerificationEmail" asp-controller="Registration" class="btn btn-info btn-sm">@T["Send verification email"]</button>
    </form>
}
