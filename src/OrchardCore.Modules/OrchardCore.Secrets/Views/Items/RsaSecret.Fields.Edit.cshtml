@model RsaSecretViewModel
@* <div class="form-group" asp-validation-class-for="AuthenticationString">
    <label asp-for="AuthenticationString">@T["Authentication String"]</label>
    <div class="input-group mb-2 mb-sm-0">
        @if(Model.Context.IsNew)
        {
            <input asp-for="AuthenticationString" class="form-control pwd" type="password" required/>
        }
        else 
        {
            <input asp-for="AuthenticationString" class="form-control pwd" type="password" placeholder="&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;"/>
        }
        <div class="input-group-append reveal" title="@T["Show/hide authentication string"]">
            <button type="button" class="btn btn-secondary" tabindex="-1" aria-hidden="true"><i class="fa fa-eye-slash"></i></button>
        </div>
    </div>    
    <span asp-validation-for="AuthenticationString"></span>
    <span class="hint">@T["The password or key for the authentication secret."]</span>
</div> *@

<div class="current-key">
    <div class="form-group" asp-validation-class-for="PublicKey">
        <label asp-for="PublicKey">@T["Public Key"]</label>
        @if (Model.Context.IsNew)
        {
            <textarea asp-for="PublicKey" class="form-control" rows="10"></textarea>  
        }
        else
        {
            <textarea asp-for="PublicKey" class="form-control" rows="10" readonly></textarea>  
        }
        <span asp-validation-for="PublicKey"></span>
        <span class="hint">@T["The public key in PEM format."]</span>

    </div>
    @if (!String.IsNullOrEmpty(Model.PrivateKey))
    {
        <div class="form-group" asp-validation-class-for="PrivateKey">
            <label asp-for="PrivateKey">@T["Private Key"]</label>
            <textarea asp-for="PrivateKey" class="form-control" rows="10"></textarea>    
            <span asp-validation-for="PrivateKey"></span>
            <span class="hint">@T["The private key in PEM format. Once created this key will never be displayed again."]</span>
        </div>
    }
</div>

<div class="generate-new-key d-none">
    <input hidden asp-for="CycleKey"/>
    <div class="form-group" asp-validation-class-for="NewPublicKey">
        <label asp-for="PublicKey">@T["Public Key"]</label>
        <textarea asp-for="PublicKey" class="form-control" rows="10"></textarea>  
        <span asp-validation-for="PublicKey"></span>
        <span class="hint">@T["The public key in PEM format."]</span>

    </div>
    <div class="form-group" asp-validation-class-for="NewPrivateKey">
        <label asp-for="NewPrivateKey">@T["Private Key"]</label>
        <textarea asp-for="NewPrivateKey" class="form-control"></textarea>    
        <span asp-validation-for="NewPrivateKey"></span>
        <span class="hint">@T["The private key in PEM format. Once created this key will never be displayed again."]</span>
    </div>   
</div>
@* TODO here is hide the generate-new-key behind a button, and swap them as and when.*@